{"version":3,"sources":["components/LoginForm/LoginForm.tsx","components/Profile/Profile.tsx","shared/state.ts","App.tsx","index.tsx"],"names":["LoginForm","error","login","useState","name","password","details","setDetails","className","onSubmit","e","preventDefault","onChange","target","value","placeholder","type","Profile","phone","id","contactsList","setContactsList","contact","setContact","searchTerm","setSearchTerm","mode","setMode","setError","htmlFor","onClick","Math","trunc","random","forEach","el","filter","val","toLowerCase","includes","map","contactItem","String","handleEdit","users","App","user","setUser","render","document","getElementById"],"mappings":"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","file":"static/js/main.f3af3145.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nimport { UserLoginData } from '../../shared/state';\nimport './LoginForm.scss';\n\ninterface LoginFormProps {\n  login: (details: UserLoginData) => void,\n  error: string\n}\n\nconst LoginForm: React.FC<LoginFormProps> = ({ error, login }) => {\n  const [details, setDetails] = useState({name: \"\", password: \"\"});\n\n  const submitHandler = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    login(details);\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-md-7\">\n          <div className=\"card\">\n            <form className=\"box\" onSubmit={submitHandler}>\n              <h1>Login</h1>\n              {(error !== \"\") ? (\n                <div className=\"error\">{error}</div>\n              ) : \"\"}\n              <p className=\"text-muted\">Please enter your login and password!</p>\n              <input\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  setDetails({...details, name: e.target.value});\n                }}\n                placeholder=\"Username\"\n                type=\"text\"\n                value={details.name}/>\n              <input\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  setDetails({...details, password: e.target.value});\n                }}\n                placeholder=\"Password\"\n                type=\"password\"\n                value={details.password}/>\n              <button className=\"btn-submit\" type=\"submit\">Login</button>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginForm;\n","/* eslint-disable consistent-return */\n/* eslint-disable array-callback-return */\n/* eslint-disable no-param-reassign */\nimport React, { useState } from 'react';\nimport './Profile.scss';\n\ninterface ContactData {\n  name: string,\n  phone: string,\n  id: number\n}\n\nconst Profile: React.FC = () => {\n  const [contactsList, setContactsList] = useState<Array<ContactData>>([{name: \"John\", phone: \"8-999-999-99-99\", id: 0}]);\n  const [contact, setContact] = useState<ContactData>({name: \"\", phone: \"\", id: 0});\n  const [searchTerm, setSearchTerm] = useState<string>(\"\");\n  const [mode, setMode] = useState<string>(\"add\");\n  const [error, setError] = useState<string>(\"\");\n\n  const submitHandlerAdd = () => {\n    if (contact.name && contact.phone) {\n      setContactsList([...contactsList, {...contact, id: Math.trunc(Math.random() * 100000)}]);\n      setContact({name: \"\", phone: \"\", id: 0});\n      setError(\"\");\n    }\n    else setError(\"Name or phone shouldn't be empty\");\n  };\n\n  const submitHandlerUpdate = () => {\n    if (contact.name && contact.phone) {\n      contactsList.forEach((el) => {\n        if (el.id === contact.id) {\n          el.name = contact.name;\n          el.phone = contact.phone;\n        }\n      });\n      setContact({...contact, name: \"\", phone: \"\"});\n      setError(\"\");\n      setMode(\"add\");\n    }\n    else setError(\"Name or phone shouldn't be empty\");\n  };\n\n  const handleDelete = (e: React.MouseEvent<HTMLDivElement>, id: number) => {\n    setContactsList(contactsList.filter((contactItem) => contactItem.id !== id));\n  };\n\n  const handleEdit = (e: React.MouseEvent<HTMLDivElement>, contactItem: ContactData) => {\n    setMode(\"update\");\n    setContact(contactItem);\n  };\n\n  return (\n    <div className=\"vh-100\">\n      <div className=\"container py-5\">\n        <div className=\"row d-flex justify-content-center align-items-center h-100\">\n          <div className=\"col col-xl-10\">\n            <div className=\"card bg-dark\">\n              <div className=\"card-body p-5\">\n                {(error !== \"\") ? (\n                  <div className=\"error\">{error}</div>\n                ) : \"\"}\n                <form className=\"d-flex justify-content-center align-items-center mb-4 form-contact\">\n                  <div className=\"form-outline flex-fill\">\n                    <label className=\"form-label col-6\" htmlFor=\"form1\">\n                      <input\n                        className=\"form-control col-6\"\n                        id=\"form1\"\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                          setContact({...contact, name: e.target.value});\n                        }}\n                        placeholder=\"Name\"\n                        type=\"text\"\n                        value={contact.name}\n                      />\n                      <input\n                        className=\"form-control col-6\"\n                        id=\"form2\"\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                          setContact({...contact, phone: e.target.value});\n                        }}\n                        placeholder=\"Phone number\"\n                        type=\"text\"\n                        value={contact.phone}\n                      />\n                    </label>\n                  </div>\n                  {mode === \"add\" ? (<button\n                    className=\"btn btn-info ms-2\"\n                    onClick={submitHandlerAdd}\n                    type=\"button\">Add</button>\n                    ) : (\n                    <button\n                    className=\"btn btn-info ms-2\"\n                    onClick={submitHandlerUpdate}\n                    type=\"button\">Update</button>\n                    )}\n                </form>\n                <input\n                  className=\"form-control search\"\n                  id=\"form3\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    setSearchTerm(e.target.value);\n                  }}\n                  placeholder=\"Search by name...\"\n                  type=\"text\"\n                  value={searchTerm}/>\n                <div className=\"tab-content\" id=\"ex1-content\">\n                  <div\n                    aria-labelledby=\"ex1-tab-1\"\n                    className=\"tab-pane fade show active\"\n                    id=\"ex1-tabs-1\"\n                  >\n                    <ul className=\"list-group mb-0\">\n                      {contactsList.filter((val) => {\n                        if (searchTerm === \"\") return val;\n                        if (searchTerm && val.name.toLowerCase().includes(searchTerm.toLowerCase())) return val;\n                      }).map((contactItem) => (\n                        <li className=\"list-group-item d-flex align-items-center border-0 mb-2 rounded\"\n                          id={String(contactItem.id)} key={String(contactItem.id)}>\n                          <div className=\"info\">\n                            <p>{contactItem.name}</p>\n                            <p>{contactItem.phone}</p>\n                          </div>\n                          <div\n                            aria-hidden=\"true\"\n                            className=\"btn-item\"\n                            id=\"edit\"\n                            onClick={(e) => handleEdit(e, contactItem)}/>\n                          <div\n                            aria-hidden=\"true\"\n                            className=\"btn-item\"\n                            id=\"delete\"\n                            onClick={(e) => handleDelete(e, contactItem.id)}/>\n                        </li>\n                        )\n                      )}\n                    </ul>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;\n","export interface UserData {\n  name: string,\n  password: string,\n  id: number\n}\n\nexport interface UserLoginData {\n  name: string,\n  password: string\n}\n\nexport const users = <Array<UserData>>[\n  {\n    name: \"admin\",\n    password: \"admin\",\n    id: 0\n  }\n];\n","import React, { useState } from 'react';\n\nimport LoginForm from './components/LoginForm/LoginForm';\nimport Profile from './components/Profile/Profile';\nimport './App.scss';\nimport { UserLoginData, users } from './shared/state';\n\nconst App: React.FC = () => {\n  const [user, setUser] = useState({name: \"\"});\n  const [error, setError] = useState(\"\");\n\n  const login = (details: UserLoginData) => {\n    if (details.name === users[0].name && details.password === users[0].password) {\n      setUser({\n        name: details.name,\n      });\n    } else {\n      setError(\"Username or password incorrect\");\n    }\n  };\n\n  const logout = () => {\n    setUser({name: \"\"});\n    setError(\"\");\n  };\n\n  return (\n    <div className=\"App\">\n      {(user.name !== \"\") ? (\n      <div className=\"welcome\">\n        <div className=\"welcome-header\">\n          <button className=\"welcome-btn\" onClick={logout} type=\"button\">Logout</button>\n          <h2 className=\"welcome-message\">Welcome, <span>{user.name}</span></h2>\n        </div>\n        <Profile />\n\n      </div>\n    ) : (\n      <LoginForm error={error} login={login}/>\n    )}\n    </div>\n  );\n};\n\nexport default App;\n","import { StrictMode } from 'react';\nimport { render } from 'react-dom';\n\nimport './index.scss';\nimport App from './App';\n\nrender(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}